from keras.models import load_model
import numpy as np
import cv2 as cv
import keras
from keras.models import Sequential
from keras.layers import Dense, Dropout, Flatten
from keras.layers.convolutional import Conv2D, MaxPooling2D
from keras.utils import np_utils
from keras.models import load_model
from keras import backend as K
K.set_image_dim_ordering('th')
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.metrics import accuracy_score, confusion_matrix, roc_curve, roc_auc_score
import os
from imutils import paths
import glob
import numpy as np
import cv2 as cv
import imutils
import argparse

ap = argparse.ArgumentParser()
ap.add_argument("-p", "--path", type=str, default="hackathon/output/01452bf73ef61c24a7b95e925daf8a6a.jpg", help="path to image")
ap.add_argument("-m", "--model", type=str, default="model/model2.h5", help="path to trained cartoon character recognition model")
args = vars(ap.parse_args()) 

class_dict ={0 : "Spongebob", 1: "Patrick"}

model = load_model(args['model'])
img = cv.imread(args['path'])

n = img
n = n.reshape(1, 3, 256, 256).astype('float32')
cnn_probab = model.predict(n)
predict = np.argmax(cnn_probab)

print(class_dict[predict]) #0 for Spongebob, 1 for Patrick